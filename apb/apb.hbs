# SPDX-License-Identifier: MIT
# https://github.com/m-kru/vhdl-amba5
# Copyright (c) 2024 Micha≈Ç Kruszewski

namespace eval vhdl::amba5::apb {
  # The pkg core contains the APB package with all primary types and functions.
  namespace eval pkg {
    proc src {} {
      hbs::SetLib "apb"
      hbs::SetStd "2019"
      hbs::AddFile apb.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddPostElabCb hbs::SetArgsPrefix "--messages=compact"
      hbs::SetTop $top
      src
      hbs::SetLib ""
    }

    # Testbench for protection_t functions.
    proc tb-prot-funcs {} {
      _tb "tb_prot_funcs"
      hbs::AddFile tb/tb-prot-funcs.vhd
      hbs::Run
    }

    # Testbench for various util functions.
    proc tb-util-funcs {} {
      _tb "tb_util_funcs"
      hbs::AddFile tb/tb-util-funcs.vhd
      hbs::Run
    }

    hbs::Register
  }

  # The checker core is the interface checker core.
  # It detects erroneous and unrecommended scenarios on the interface.
  namespace eval checker {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "apb"
      hbs::SetStd "2019"
      hbs::AddFile checker.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddPostElabCb hbs::SetArgsPrefix "--messages=compact"
      hbs::SetTop $top
      src
      hbs::SetLib ""
    }

    # Testbench for warnings detection logic.
    proc tb-detect-warnings {} {
      _tb "tb_detect_warnings"
      hbs::AddFile tb/checker/tb-detect-warnings.vhd
      hbs::Run
    }

    # Testbench for errors detection logic.
    proc tb-detect-errors {} {
      _tb "tb_detect_errors"
      hbs::AddFile tb/checker/tb-detect-errors.vhd
      hbs::AddPostElabCb hbs::SetArgsSuffix "--exit-severity=failure"
      hbs::Run
    }

    # Testbench checking that no warnings or errors are issued during correct transaction.
    proc tb-correct-transaction {} {
      _tb "tb_correct_transaction"
      hbs::AddFile tb/checker/tb-correct-transaction.vhd
      hbs::AddPostElabCb hbs::SetArgsSuffix "--exit-severity=warning"
      hbs::Run
    }

    hbs::Register
  }

  # The bfm is the Bus Function Model. It is useful only for simulation.
  namespace eval bfm {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "apb"
      hbs::SetStd "2019"
      hbs::AddFile bfm.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddDep vhdl::amba5::apb::checker::src
      hbs::AddPostElabCb hbs::SetArgsPrefix "--messages=compact"
      hbs::SetTop $top
      src
      hbs::SetLib ""
    }

    proc tb-write {} {
      _tb "tb_write"
      hbs::AddFile tb/bfm/tb-write.vhd
      hbs::Run
    }

    proc tb-read {} {
      _tb "tb_read"
      hbs::AddFile tb/bfm/tb-read.vhd
      hbs::Run
    }

    hbs::Register
  }
}
